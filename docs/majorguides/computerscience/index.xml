<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Unofficial UCSC Student Guide â€“ Computer Science</title><link>https://hilalmorrar.com/ucsc-guide/docs/majorguides/computerscience/</link><description>Recent content in Computer Science on Unofficial UCSC Student Guide</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://hilalmorrar.com/ucsc-guide/docs/majorguides/computerscience/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: C Programming</title><link>https://hilalmorrar.com/ucsc-guide/docs/majorguides/computerscience/cprogramming/</link><pubDate>Fri, 10 Sep 2021 00:00:00 +0000</pubDate><guid>https://hilalmorrar.com/ucsc-guide/docs/majorguides/computerscience/cprogramming/</guid><description>
&lt;p>This section is designed as an introduction into C for use in lower division courses, such as CSE 13S. This section will link to official reference and other resources when possible.&lt;/p>
&lt;hr>
&lt;h2 id="prerequisites">Prerequisites&lt;/h2>
&lt;ul>
&lt;li>A basic understanding of programming concepts, such as variables, if statements, loops, and functions. If you do not have &lt;em>any&lt;/em> programming experience, it is &lt;em>highly&lt;/em> recommended that you read the section on Python first.&lt;/li>
&lt;li>A Linux virtual machine or box. (Ubuntu 20.04 recommended)&lt;/li>
&lt;li>A basic understanding of how the terminal works on your distribution of Linux. If you do have not used a Linux before, it is recommended that you read the section on Unix first.&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="background">Background&lt;/h2>
&lt;p>&lt;a href="https://en.wikipedia.org/wiki/C_(programming_language)">C&lt;/a> is a a very simple language. It was developed in the 1970s by &lt;a href="https://en.wikipedia.org/wiki/Dennis_Ritchie">Dennis Ritchie&lt;/a>. The language was eventually standardized in 1989 by &lt;a href="https://en.wikipedia.org/wiki/American_National_Standards_Institute">ANSI&lt;/a>. This version would become known as ANSI C, also referred to as C89. Over the years, newer versions of the C standard have been published. This section will primarily be covering basic C features up until C99.&lt;/p>
&lt;hr>
&lt;h2 id="hello-world">Hello world&lt;/h2>
&lt;div class="highlight">&lt;div style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;width:auto;overflow:auto;display:block;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-c" data-lang="c">&lt;span style="color:#8f5902;font-style:italic">#include&lt;/span> &lt;span style="color:#8f5902;font-style:italic">&amp;lt;stdio.h&amp;gt;&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">int&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">void&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#000">printf&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Hello World!&lt;/span>&lt;span style="color:#4e9a06">\n&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The above code shows one of the ways to write a &amp;ldquo;Hello World&amp;rdquo; program in C. A &amp;ldquo;Hello World&amp;rdquo; program is a program that prints &amp;ldquo;Hello World&amp;rdquo; or some variation to the terminal. This program may look a little intimidating at first for someone who hasn&amp;rsquo;t seen C code before, but rest assured, each part of the code will be explained eventually through this section&amp;rsquo;s articles.&lt;/p>
&lt;p>Line 1 shows a &lt;code>#include&lt;/code> preprocessor directive. The &lt;code>#include&lt;/code> directive will be covered more in-depth in the &amp;ldquo;Writing programs&amp;rdquo; section. Preprocessor directives in general will be covered later in the &amp;ldquo;Building programs&amp;rdquo; section. For now, all you need to know about this line is that it enables us to use the &lt;code>printf&lt;/code> function.&lt;/p>
&lt;p>Line 3 shows a function signature. A function signature contains information about a function. This function in specific is called the main function. When defined, it is the function that is called when the program is run. Functions will be covered later in the &amp;ldquo;Functions&amp;rdquo; section.&lt;/p>
&lt;p>Line 4 shows a call to the &lt;code>printf&lt;/code> function. In this case, &lt;code>printf&lt;/code> is used to print (output) &lt;code>&amp;quot;Hello World!\n&amp;quot;&lt;/code> to the standard output. Standard output will be explained in the &amp;ldquo;Standard Input/Output/Error&amp;rdquo; section. &lt;code>\n&lt;/code> is put at the end to print a new line. Unlike many other programming languages' print statements/functions/methods, C&amp;rsquo;s &lt;code>printf&lt;/code> does not automatically add a new line at the end of the string to be printed. You will need to do so manually.&lt;/p>
&lt;p>Line 6 makes the program return with error code 0. In C, the main function returns error codes. An error code of 0 indicates that the program exited &lt;em>without&lt;/em> an error. A non-zero error code indicates that the program exited &lt;em>with&lt;/em> an error. Return statements and values will be covered more in-depth in the &amp;ldquo;Functions&amp;rdquo; section.&lt;/p>
&lt;p>If you are still confused about how this program works, do not worry. Each part of it will eventually be covered in this section&amp;rsquo;s articles.&lt;/p>
&lt;h2 id="additional-resources">Additional resources&lt;/h2>
&lt;p>The definitive book on C is &lt;em>The C Programming Language&lt;/em>, by Brian Kernighan and Dennis Ritchie (the book is often called &amp;ldquo;K&amp;amp;R&amp;rdquo; after the author&amp;rsquo;s last initials). It&amp;rsquo;s concise, well-written, and generally a model for excellent technical writing. The second and most recent edition was published all the way back in 1988, but C has not changed much since then, so it is still a great resource. It can easily be found legally (for money) or illegally (for free) online.&lt;/p></description></item><item><title>Docs: Discrete Math</title><link>https://hilalmorrar.com/ucsc-guide/docs/majorguides/computerscience/discretemath/</link><pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate><guid>https://hilalmorrar.com/ucsc-guide/docs/majorguides/computerscience/discretemath/</guid><description>
&lt;p>As a UCSC student, the concepts and skills from this lower division class are absolutely essential. The material from Discrete Math shows up many times in upper division courses many times, so it is well worth your time to understand as much as you can from this class now, so later classes are not as challenging as they could be.&lt;/p></description></item><item><title>Docs: Intro to Machine Learning</title><link>https://hilalmorrar.com/ucsc-guide/docs/majorguides/computerscience/machinelearning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hilalmorrar.com/ucsc-guide/docs/majorguides/computerscience/machinelearning/</guid><description>
&lt;!-- explain feature vectors, tuning parameters, how thetas get updates, optimizers, activations, maybe some quick python demo or template --></description></item><item><title>Docs: Git</title><link>https://hilalmorrar.com/ucsc-guide/docs/majorguides/computerscience/git/</link><pubDate>Thu, 09 Sep 2021 00:00:00 +0000</pubDate><guid>https://hilalmorrar.com/ucsc-guide/docs/majorguides/computerscience/git/</guid><description/></item></channel></rss>